// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reminder/reminder.proto

/*
Package reminder is a generated protocol buffer package.

It is generated from these files:
	reminder/reminder.proto

It has these top-level messages:
	GetRequest
	GetResponse
	CreateRequest
	CreateResponse
	Reminder
*/
package reminder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetResponse struct {
	Reminder *Reminder `protobuf:"bytes,1,opt,name=reminder" json:"reminder,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetResponse) GetReminder() *Reminder {
	if m != nil {
		return m.Reminder
	}
	return nil
}

type CreateRequest struct {
	UserId      string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Url         string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type CreateResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Reminder struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
}

func (m *Reminder) Reset()                    { *m = Reminder{} }
func (m *Reminder) String() string            { return proto.CompactTextString(m) }
func (*Reminder) ProtoMessage()               {}
func (*Reminder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Reminder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Reminder) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Reminder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Reminder) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Reminder) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "reminder.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "reminder.GetResponse")
	proto.RegisterType((*CreateRequest)(nil), "reminder.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "reminder.CreateResponse")
	proto.RegisterType((*Reminder)(nil), "reminder.Reminder")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ReminderService service

type ReminderServiceClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
}

type reminderServiceClient struct {
	cc *grpc.ClientConn
}

func NewReminderServiceClient(cc *grpc.ClientConn) ReminderServiceClient {
	return &reminderServiceClient{cc}
}

func (c *reminderServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/reminder.ReminderService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reminderServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/reminder.ReminderService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReminderService service

type ReminderServiceServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
}

func RegisterReminderServiceServer(s *grpc.Server, srv ReminderServiceServer) {
	s.RegisterService(&_ReminderService_serviceDesc, srv)
}

func _ReminderService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReminderServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reminder.ReminderService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReminderServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReminderService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReminderServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reminder.ReminderService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReminderServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReminderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reminder.ReminderService",
	HandlerType: (*ReminderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ReminderService_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _ReminderService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reminder/reminder.proto",
}

func init() { proto.RegisterFile("reminder/reminder.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x69, 0x12, 0xa2, 0x72, 0x11, 0x05, 0x9d, 0x80, 0x5a, 0x15, 0x43, 0x14, 0x84, 0xc4,
	0x94, 0x48, 0x85, 0xb5, 0x0b, 0x0c, 0x15, 0x6b, 0xd8, 0xd8, 0xf2, 0xe7, 0xd4, 0x5a, 0x22, 0x71,
	0xb0, 0x1d, 0x06, 0x1e, 0x80, 0xe7, 0x46, 0xb8, 0x71, 0x52, 0x02, 0xdd, 0xbe, 0xbb, 0xcf, 0xbe,
	0xfb, 0x9d, 0x7d, 0x30, 0x97, 0x54, 0xf1, 0xba, 0x24, 0x99, 0x58, 0x11, 0x37, 0x52, 0x68, 0x81,
	0x53, 0x1b, 0x47, 0xd7, 0x00, 0x6b, 0xd2, 0x29, 0xbd, 0xb7, 0xa4, 0x34, 0xce, 0xc0, 0xe1, 0x25,
	0x9b, 0x84, 0x93, 0xbb, 0x93, 0xd4, 0xe1, 0x65, 0xb4, 0x82, 0xc0, 0xb8, 0xaa, 0x11, 0xb5, 0x22,
	0x8c, 0xa1, 0xbf, 0x68, 0x0e, 0x05, 0x4b, 0x8c, 0xfb, 0xca, 0x69, 0x27, 0xd2, 0xa1, 0xb8, 0x80,
	0xd3, 0x27, 0x49, 0x99, 0x26, 0x5b, 0xff, 0x0a, 0xfc, 0x56, 0x91, 0x7c, 0xb6, 0x3d, 0xba, 0x08,
	0x11, 0xbc, 0x3a, 0xab, 0x88, 0x39, 0x26, 0x6b, 0x34, 0x86, 0x10, 0x94, 0xa4, 0x0a, 0xc9, 0x1b,
	0xcd, 0x45, 0xcd, 0x5c, 0x63, 0xed, 0xa7, 0xf0, 0x1c, 0xdc, 0x56, 0xbe, 0x31, 0xcf, 0x38, 0x3f,
	0x32, 0x0a, 0x61, 0x66, 0x1b, 0x76, 0xc8, 0xe3, 0x89, 0x3e, 0x61, 0x6a, 0x41, 0xc7, 0xde, 0x1e,
	0x9d, 0xf3, 0x2f, 0x9d, 0x7b, 0x98, 0xce, 0x3b, 0x48, 0x77, 0xdc, 0xd3, 0x2d, 0xbf, 0x26, 0x70,
	0x66, 0x9b, 0xbf, 0x90, 0xfc, 0xe0, 0x05, 0xe1, 0x03, 0xb8, 0x6b, 0xd2, 0x78, 0x31, 0xbc, 0xe3,
	0xf0, 0x1d, 0x8b, 0xcb, 0x51, 0x76, 0x37, 0x53, 0x74, 0x84, 0x2b, 0xf0, 0x77, 0x73, 0xe2, 0x7c,
	0x38, 0xf2, 0xeb, 0xa9, 0x17, 0xec, 0xaf, 0x61, 0xaf, 0x3f, 0xde, 0xbe, 0xde, 0x6c, 0xb8, 0xde,
	0xb6, 0x79, 0x5c, 0x88, 0x2a, 0xc9, 0x33, 0xd1, 0x6c, 0xb3, 0x2a, 0xd9, 0x08, 0xb3, 0x1c, 0xfd,
	0xae, 0xe4, 0xbe, 0x89, 0xef, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x71, 0x31, 0x7b, 0x9b, 0x47,
	0x02, 0x00, 0x00,
}
